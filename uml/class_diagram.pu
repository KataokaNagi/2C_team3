' @file      class_diagram.pu
' @brief     クラス図出力用のファイル
' @note      高度情報演習2C 後半 木村教授担当分 Team3
' @auther    AL18036 Kataoka Nagi
' @date      2020-12-28 06:42:28
' $Version   1.0
' $Revision  1.12
' @par       追加：MonsterMainHpDAO
' @note      java -jar plantuml.jar -graphvizdot C:\Graphviz\bin\dot.exe class_diagram.pu -charset UTF-8
' @see       https://qiita.com/opengl-8080/items/98c510b8ca060bdd2ea3

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

@startuml ./class_diagram.png
scale 1.5
skinparam DefaultFontName メイリオ
' 可視性の変更
skinparam classAttributeIconSize 0

''''''''''''''''''''''''''''''''''''''''''''''''''

header 
Team 3 : AL18036 Kataoka Nagi
2020-12-28 06:42:22
追加：MonsterMainHpDAO
end header

''''''''''''''''''''''''''''''''''''''''''''''''''

title
**Kodo 2C Team 3: Class Diagram**
+ public
~- private
end title
' __static__

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

package src {
  package src.application {
    class Main
  }
  package src.gameprocess {
  }
  package src.jdbc {
  }
}

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

note left
  --Folder Tree--
  2C_team3
  |_ src
    |_ application
      |_ application.css
      |_ Battle.fxml
      |_ Menu.fxml
      |_ BattleController.java
      |_ Main.java
      |_ MenuController.java
    |_ gameprocess
      |_ BattleManager.java
    |_ jdbc
      |_ DBConnector.java
      |_ DataAccessObject.java
      |_ MenuDAO.java
      |_ BattleDAO.java
      |_ sql
        |_ hoge.sql
        |_ fuga.sql
  |_ bin/application
    |_ ~*.class
end note

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

package java.sql {
}

package javafx {
  class Application
  Interface Initializable
}

src.jdbc --+ java.sql
src.application --+ javafx

''''''''''''''''''''''''''''''''''''''''''''''''''

' @note クラスの命名規則
' @see  https://qiita.com/KeithYokoma/items/ee21fec6a3ebb5d1e9a8

package src.application {
  ' @note Scene Builder (GUI tool)
  ' @see  https://qiita.com/tarosa0001/items/05ac653a091b7d1290f9
  class Main extends Application {
    + start(primaryStage: Stage): void
    + {static} main(args: String[]): void
  }
  
  class MenuController {
    - weapon_field: ComboBox<String>
    - armor_field: ComboBox<String>
    - monster_field: ComboBox<String>
    -  StartButton: Button
    -  EndButton: Button
    -  Attack_value: Label
    -  Defense_value: Label

    # OnEndButton(event: ActionEvent): void
    # OnStartButton(event: ActionEvent): void
    # selectArmor(event: ActionEvent): void
    # selectWeapon(event: ActionEvent): void
  }

  class BattleController {
    - Attack_Log: Label
    - HP_Value: Label
    - Sharpmess_Value: Label
    - AttackButton: Button
    
    # OnAttackButton(event: ActionEvent): void
  }
}

' 記事のクラス
  ' class ApplicationController extends Initializable {
  '   - dropDown: ChoiceBox<String>
  '   - textBox: TextField
  '   - button: Button

  '   + initialize(location: URL, resources: ResourceBundle): void
  '   + onClick(event: ActionEvent): void
  '   + getToolType(): ChoiceBox<String>
  '   + setToolType(toolType: ChoiceBox<String>): void
  '   + getInputFile(): TextField
  '   + setInputFile(textBox: TextField): void
  '   + getReference(): Button
  '   + setReference(button: Button): void
  ' }


''''''''''''''''''''''''''''''''''''''''''''''''''

package src.gameprocess {
  class BattleManager {
    - monster_id: int
    - element_player: int
    - elementValue_player: int
    - rnd: Random

    + PlayerAttack(Parts_id: int): void
    - MonsterAttack(): void
    - ElementDamage_PlayerAttack(): float
    - ElementCompatibilityCalculation_EnemyAttack(attackElement: int): float
    - AddLog(addText: String): void
    - SharpnessDecrease(sharpness: int): int 
  }

  class EquipmentManager {
    + GetAttack(weaponName: String): int
    + GetDeffence(equipmentName: String): int
  }
}

''''''''''''''''''''''''''''''''''''''''''''''''''

package src.jdbc {
  ' @note DAO pattern
  ' @see https://kanda-it-school-kensyu.com/java-jdbc-contents/jj_ch04/jj_0401/

  abstract class DBConnector {
    - {static} RDB_DRIVE: final String
    - {static} URL: final String
    - {static} USER: final String
    - {static} PASSWD: final String

    + {static} getConnection(): Connection
  }

  abstract class DataAccessObject extends DBConnector {
    # createTable(tableName: String): void
    # dropTable(tableName: String): void
    # selectColumn(columnName: String, tableName: String, primaryKeyColumnName: String): ArrayList<String>
    # toIntegerList(strList: ArrayList<String>): ArrayList<Integer>
    # toFloatList(strList: ArrayList<String>): ArrayList<Float>
    # selectField(columnName: String, tableName: String, primaryKeyColumnName: String, primaryKey: String): String
    # selectFirstField(columnName: String, tableName: String, primaryKeyColumnName: String): String
    # updateField(columnName: String, tableName: String, primaryKeyColumnName: String, primaryKey: String): void
    # updateFirstField(columnName: String, tableName: String, primaryKeyColumnName: String): void
    # closeDBResources(resultSet: ResultSet, statement: Statement, connection: Connection)
  }

  class MenuDAO extends DataAccessObject {
    + MenuDAO()
    + selectAllWeaponName(): ArrayList<String>
    + selectAllArmorName(): ArrayList<String>
    + selectAllMonsterName(): ArrayList<String>
    + selectAllWeaponAttackVal(): ArrayList<Integer>
    + selectAllArmorDiffenceVal(): ArrayList<Integer>
  }

  abstract class BattleDAO extends DataAccessObject {
  + getWeaponName(): String
  + getArmorName(): String
  + getMonsterName(): String
  + setWeaponName(weaponName: String): void
  + setArmorName(armorName: String): void
  + setMonsterName(monsterName: String): void
  }

  class SharpnessSearchDAO extends BattleDAO {
    + SharpnessSearchDAO(weaponName: String, armorName: String, monsterName: String)
    - createSharpnessSearchTable(): void
    + dropSharpnessSearchTable(): void
    + selectAllSharpnessColorName(): ArrayList<String>
    + selectAllSharpnessGaugeAmount(): ArrayList<Integer>
    + selectAllSharpnessIncreasingAttackValueRate(): ArrayList<Float>
  }

  class PlayerStatusSearchDAO extends BattleDAO {
    + PlayerStatusSearchDAO(weaponName: String, armorName: String, monsterName: String)
    - createPlayerStatusSearchTable(): void
    + dropPlayerStatusSearchTable(): void
    + selectFirstWeaponCode(): String
    + selectFirstWeaponName(): String
    + selectFirstWeaponAttackVal(): int
    + selectFirstWeaponCriticalRate(): float
    + selectFirstWeaponElementVal(): int
    + selectFirstWeaponElementCode(): String
    + selectFirstWeaponElementName(): String
    + selectFirstArmorCode(): String
    + selectFirstArmorName(): String
    + selectFirstArmorDiffenceVal(): int
    + selectFirstArmorSkillCode(): String
    + selectFirstArmorSkillName(): String
    + selectFirstArmorIncreasingSkillTarget(): String
    + selectFirstArmorIncreasingSkillVal(): int
    + selectFirstArmorElementResistanceCode(): String
    + selectFirstArmorFireResistance(): int
    + selectFirstArmorWaterResistance(): int
    + selectFirstArmorElectricResistance(): int
    + selectFirstArmorIceResistance(): int
    + selectFirstArmorDragonResistance(): int
  }

  class MonsterAttackStatusSearchDAO extends BattleDAO {
    + MonsterAttackStatusSearchDAO(weaponName: String, armorName: String, monsterName: String)
    - MonsterAttackStatusSearchTable(): void
    + dropMonsterAttackStatusSearchTable(): void
    + selectAllMonsterAttackName(): ArrayList<String>
    + selectAllMonsterAttackVal(): ArrayList<Integer>
    + selectAllMonsterAttackMissProb(): ArrayList<Float>
  }

  class PlayerHpDAO extends BattleDAO {
    + PlayerHpDAO(weaponName: String, armorName: String, monsterName: String) {
    - createPlayerHpTable(): void
    + dropPlayerHpTable(): void
    + selectFirstPlayerHp(): int
    + updateFirstPlayerHp(): void
  }

  class MonsterMainHpDAO extends BattleDAO {
    + MonsterMainHpDAO(weaponName: String, armorName: String, monsterName: String) {
    - createMonsterMainHpTable(): void
    + dropMonsterMainHpTable(): void
    + selectFirstMonsterMainHp(): int
    + updateFirstMonsterMainHp(): void
  }
}

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

@enduml
